diff --git a/dist/core/builders/vite/index.mjs b/dist/core/builders/vite/index.mjs
index a86d54e7c3c172d59c793eca2dc5b1500967d2e1..030a7ed5b16a0cd42d0e8af62f8db20876091c8a 100644
--- a/dist/core/builders/vite/index.mjs
+++ b/dist/core/builders/vite/index.mjs
@@ -1,15 +1,16 @@
-import * as wxtPlugins from "./plugins/index.mjs";
+import { relative } from "node:path";
+import { ViteNodeRunner } from "vite-node/client";
+import { ViteNodeServer } from "vite-node/server";
+import { installSourcemapsSupport } from "vite-node/source-map";
+
+import { toArray } from "../../utils/arrays.mjs";
 import {
   getEntrypointBundlePath,
   isHtmlEntrypoint
 } from "../../utils/entrypoints.mjs";
-import { toArray } from "../../utils/arrays.mjs";
-import { safeVarName } from "../../utils/strings.mjs";
-import { ViteNodeServer } from "vite-node/server";
-import { ViteNodeRunner } from "vite-node/client";
-import { installSourcemapsSupport } from "vite-node/source-map";
 import { createExtensionEnvironment } from "../../utils/environments/index.mjs";
-import { relative } from "node:path";
+import { safeVarName } from "../../utils/strings.mjs";
+import * as wxtPlugins from "./plugins/index.mjs";
 export async function createViteBuilder(wxtConfig, hooks, getWxtDevServer) {
   const vite = await import("vite");
   const getBaseConfig = async (baseConfigOptions) => {
@@ -69,13 +70,6 @@ export async function createViteBuilder(wxtConfig, hooks, getWxtDevServer) {
     const libMode = {
       mode: wxtConfig.mode,
       plugins,
-      esbuild: {
-        // Add a footer with the returned value so it can return values to `scripting.executeScript`
-        // Footer is added a part of esbuild to make sure it's not minified. It
-        // get's removed if added to `build.rollupOptions.output.footer`
-        // See https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/scripting/executeScript#return_value
-        footer: iifeReturnValueName + ";"
-      },
       build: {
         lib: {
           entry,
